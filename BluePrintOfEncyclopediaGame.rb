require_relative "EncyclopediaGame.rb"
include Tools

# 1 создать массив команды
  # 1.1 создать класс Team(в Tool)

  # 1.2 узнать кол-во комманд
  print "Enter teams amount :"
  teams_amount = gets.chomp.to_i
  # 1.3 запрашивая аргументы для инициализации создать массив команд(в Tool)
  teams_array = Tools.create_teams_array(teams_amount)
  
  ########################################################Выполнено , работает#########################################################

# 2 начать раунд
  # 2.1 задать начальный номер раунда = 1
  round_number = 1 
  # 2.2 создать цикл сверяющийся с номером раунда
  while round_number < 4 
  # 2.3 вывести сообщение о начале раунда  
  puts "                                                ROUND   " + round_number.to_s + "  BEGINS "

  ########################################################Выполнено , работает#########################################################

#3 ввести правильное определение
  #3.1 считать из файла "deffenition(номер раунда).txt" правильное определение (в Tool)
  file_name = "deffenition" + round_number.to_s + ".txt"
  real_def = File.read(file_name)

  ########################################################Выполнено , работает#########################################################

# 4 ввести определения команд
  # 4.1 каждую команду попросить ввести определение (делая отбивку перед каждым вводом)(в Tool)
  for team in teams_array
    print team.team_name + " enter your diifinition of " + real_def[0,real_def.index(" ")] + " - is "
    team.answer = gets.chomp.strip
    Tools.ident
  end
  ########################################################Выполнено , работает#########################################################

# 5 перемешать определения
  # 5.1 перемешать копию массива  команд и создать хэш таблицу которая присваивает букве эллемет массива (в Tool)
  answer_hash = Tools.shuffle_team_array_and_create_hash(teams_array,real_def)
  # 5.2 выбрать рандомный индекс (в Tool + 2 пункта снизу вместе)
  # 5.3 сохранить в переменную "variants_table" ответы команд от 0..рандомного индекса(учитывать переход на новую строку)
  # 5.4  сохранить в переменную "variants_table" настоящее определение и оставшуюся часть массива   
  answer_table = Tools.create_answer_table(answer_hash)
  ########################################################Выполнено , работает#########################################################

# 6 начать голосование
  # 6.1 для каждой команды вывести варианты ответов и дать выбрать одну (не забыть отступ)
  # 6.2 выбранным командам увеличить значение round_score на 1
for team in teams_array
    puts answer_table
  print team.team_name + "  Choose real deffenition : "
  choice = gets.chomp.strip
  while !answer_hash.has_key?(choice) or team == answer_hash[choice]
    puts "You can't choose  your answer , cause it,s unfair "
    puts "		OR "
    puts "There is no answer under this letter"
    print "Try again :  "
    choice = gets.chomp.strip
  end
  if answer_hash[choice].class != String
  answer_hash[choice].round_win
  end
  Tools.ident
end
  ########################################################Выполнено , работает#########################################################

# 7 подсчитать результаты раунда (в Tool)
  # 7.1 найти максимальный результат в массиве команд (проверить условия : если результаты нулевые , если есть несколько команд набравших максимум)
    # 7.1.1 создать пустой массив победители раунда
    # 7.1.2 установить начальное значение максимума единицей
    # 7.1.3 после нахождения каждого максимального в массив победителей обнуляется и в него добавляется команда из массива комнад , если 
      # максимальный результат равен входному результату , то в массив победителей добавляется комада 
      # 7.1.4 если максимальный больше нуля , то командам в массиве победителей добавить +1 к game_score  и вывести как победителей раунда ,  если нет сказать ,что все проиграли.

Tools.count_round_results(teams_array)

# 8 начать новый раунд
  # 8.1 обнулить всем командам round_score
  # 8.2 увеличить номер раунда на единицу  
for team in teams_array
  team.round_score = 0
end
round_number += 1

end # конец while round_number < 4 

# 9 подсчитать результаты и вывести победителя - делается аналогично пункту 7 (в Tool) 

Tools.count_game_results(teams_array)
=begin
=end